{"version":3,"sources":["webpack:///./src/components/Banner.tsx"],"names":["Container","styled","a","aside","CloseButton","div","attrs","role","TextContainer","TrailText","span","bannerText","className","Banner","show","toggleBanner","transition","useSpring","config","friction","color","z","set","textTrail","useTrail","length","opacity","height","x","from","style","href","target","map","index","rest","key","transform","to","aria-label","onClick","onMouseEnter","onMouseLeave","i"],"mappings":"8mCAKA,IAAMA,EAAYC,YAAOC,IAAEC,MAATF,CAAH,KAeTG,EAAcH,YAAOC,IAAEG,KAAKC,MAAM,CACtCC,KAAM,UADYN,CAAH,KAgBXO,EAAgBP,YAAOC,IAAEA,EAATD,CAAH,KAWbQ,EAAYR,YAAOC,IAAEQ,KAATT,CAAH,KAUTU,EAAa,CACjB,QACA,QACA,SACA,gEAC2B,uBAAGC,UAAU,+BAwE3BC,UAzDf,YAA8E,IAA5DC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,WAAwC,EAEhDC,qBAAU,iBAAO,CAC3CC,OAAQ,CAAEC,SAAU,IACpBC,MAAO,UACPC,EAAG,MALuE,OAEnED,EAFmE,EAEnEA,MAAOC,EAF4D,EAE5DA,EAAKC,EAFuD,KAStEC,EAAYC,mBAASb,EAAWc,OAAQ,CAC5CC,QAASZ,EAAO,EAAI,EACpBa,OAAQ,GACRC,EAAG,EACHC,KAAM,CAAEH,QAAS,EAAGC,OAAQ,EAAGC,EAAG,MAIpC,OACE,kBAAC5B,EAAD,CAAW8B,MAAOd,GAChB,kBAACR,EAAD,CAAeuB,KAAK,gCAAgCC,OAAO,UACxDT,EAAUU,KAAI,WAAyBC,GAAzB,IAAGN,EAAH,EAAGA,EAAGD,EAAN,EAAMA,OAAWQ,EAAjB,qCACb,kBAAC1B,EAAD,CACE2B,IAAKF,EACLJ,MAAK,iBAEEK,EAFF,CAGDE,UAAWC,aAAG,CAACV,IAAI,SAAAA,GAAC,uBAAqBA,EAArB,cAIxB,kBAAC,IAAElB,KAAH,CAAQoB,MAAO,CAAEH,WAAWhB,EAAWuB,SAI7C,kBAAC9B,EAAD,CACEmC,aAAW,eACXC,QAAS,kBAAYzB,KACrB0B,aAAc,kBAAWnB,EAAI,CAAEF,MAAO,UAAWC,EAAG,OACpDqB,aAAc,kBAAWpB,EAAI,CAAEF,MAAO,UAAWC,EAAG,KACpDS,MACE,CACEV,QACAM,QAASV,EAAWU,UAIxB,kBAAC,IAAEiB,EAAH,CACE/B,UAAU,eACVkB,MAAO,CACLO,UAAWC,aAAG,CAACjB,IAAI,SAAAA,GAAC,gBAAcA,EAAd","file":"6-8fdc46647850d7919850.js","sourcesContent":["import React from \"react\";\nimport { a, SpringValue, to, useSpring, useTrail } from \"react-spring\";\n// Styles\nimport styled from \"styled-components\";\n\nconst Container = styled(a.aside)`\n  background-color: #000;\n  color: #fff;\n  font-family: cornerstone;\n  font-size: 2rem;\n  font-weight: 700;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  & a {\n    color: #fff;\n  }\n`;\nconst CloseButton = styled(a.div).attrs({\n  role: \"button\"\n})`\n  padding: 1rem;\n  transform-origin: 50% 50%;\n  width: auto;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  & i {\n    color: inherit;\n    font-size: 1.5rem;\n  }\n`;\nconst TextContainer = styled(a.a)`\n  font-size: 6rem;\n  font-weight: bold;\n  line-height: 1;\n\n  &:hover {\n    color: #fce21b;\n    cursor: pointer;\n    text-decoration: none;\n  }\n`;\nconst TrailText = styled(a.span)`\n  display: block;\n\n  &:last-child,\n  & .fas {\n    color: inherit;\n    font-size: 1rem;\n  }\n`;\n\nconst bannerText = [\n  \"BLACK\",\n  \"LIVES\",\n  \"MATTER\",\n  <>\n    Please consider donating <i className=\"fas fa-external-link-alt\"></i>\n  </>\n];\n\ntype TransitionProps = {\n  opacity: SpringValue<number>;\n  height: SpringValue<string>;\n};\n\ntype BannerProps = {\n  show: boolean;\n  toggleBanner: Function;\n  transition: TransitionProps;\n};\n\nfunction Banner({ show, toggleBanner, transition }: BannerProps): JSX.Element {\n  // BEGIN:: Button\n  const [{ color, z }, set] = useSpring(() => ({\n    config: { friction: 13 },\n    color: \"#8be9fd\",\n    z: 0\n  }));\n  // END:: Button\n  // BEGIN:: text trail\n  const textTrail = useTrail(bannerText.length, {\n    opacity: show ? 1 : 0,\n    height: 80,\n    x: 0,\n    from: { opacity: 0, height: 0, x: 40 }\n  });\n  // END:: text trail\n\n  return (\n    <Container style={transition as any}>\n      <TextContainer href=\"https://blacklivesmatter.com/\" target=\"_blank\">\n        {textTrail.map(({ x, height, ...rest }, index) => (\n          <TrailText\n            key={index}\n            style={\n              {\n                ...rest,\n                transform: to([x], x => `translate3d(0,${x}px,0)`)\n              } as any\n            }\n          >\n            <a.span style={{ height }}>{bannerText[index]}</a.span>\n          </TrailText>\n        ))}\n      </TextContainer>\n      <CloseButton\n        aria-label=\"Close banner\"\n        onClick={(): void => toggleBanner()}\n        onMouseEnter={(): any => set({ color: \"#50fa7b\", z: 180 })}\n        onMouseLeave={(): any => set({ color: \"#8be9fd\", z: 0 })}\n        style={\n          {\n            color,\n            opacity: transition.opacity\n          } as any\n        }\n      >\n        <a.i\n          className=\"fas fa-times\"\n          style={{\n            transform: to([z], z => `rotate(${z}deg)`)\n          }}\n        ></a.i>\n      </CloseButton>\n    </Container>\n  );\n}\n\nexport default Banner;\n"],"sourceRoot":""}